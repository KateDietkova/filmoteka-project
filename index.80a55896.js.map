{"mappings":"YAAA,MAAMA,EAAUC,SAASC,cAAc,gBAYvCC,iBAGE,MAAO,C,aAZTA,iBACE,MAAMC,QAAeC,MACnB,oGAEIC,QAAaF,EAAOG,OAE1B,OADAC,QAAQC,IAAIH,EAAKI,SACVJ,EAAKI,O,CAISC,G,gBAyDvBR,iBACE,MAAMS,QAAuBP,MAC3B,0FAGIQ,SADoBD,EAAeL,QACXO,OAE9B,OADAN,QAAQC,IAAII,GACLA,C,CA/DiBE,G,EAG1BC,GAASC,MAAK,EAACb,OAAEA,EAAMS,UAAEA,MACvBL,QAAQC,IAAII,GAEZb,EAAQkB,UAGV,SAAuBd,EAAQS,GAC7B,OAAOT,EACJe,KAAI,EAACC,YAAEA,EAAWC,MAAEA,EAAKC,UAAEA,EAASC,aAAEA,MACrC,MAAO,wKAGkDH,oCAChCC,8IAG6BA,wIAgB5D,SAAmBG,EAAaX,GAC9BL,QAAQC,IAAII,GACZ,MAGMY,EAHeZ,EAAUa,QAAOC,GACpCH,EAAYI,SAASD,EAAME,MAEGV,KAAIQ,GAC3BA,EAAMG,OAEf,OAAIL,EAAWM,OAAS,EACf,GAAGN,EAAWO,MAAM,EAAG,GAAGC,KAAK,gBAExCzB,QAAQC,IAAIgB,GAELA,EAAWQ,KAAK,M,CA3BuCC,CAClCZ,EACAT,yEA4BbsB,EAzBaZ,EA0BfY,EAAKC,MAAM,KAAK,6FAD/B,IAAiBD,CArBM,IAElBF,KAAK,G,CA1BYI,CAAcjC,EAAQS,EAAU,G","sources":["src/js/galleryMarkup.js"],"sourcesContent":["const gallery = document.querySelector('.movie-list');\n// let genre;\n\nasync function getMovie() {\n  const movies = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=579a7483bae7d6a5a25eb4c1ddded2cf&page=1'\n  );\n  const resp = await movies.json();\n  console.log(resp.results);\n  return resp.results;\n}\n\nasync function render() {\n  const movies = await getMovie();\n  const allGenres = await getAllGenres();\n  return { movies, allGenres };\n}\nrender().then(({ movies, allGenres }) => {\n  console.log(allGenres);\n  // galleryMarkup(movies, allGenres);\n  gallery.innerHTML = galleryMarkup(movies, allGenres);\n});\n\nfunction galleryMarkup(movies, allGenres) {\n  return movies\n    .map(({ poster_path, title, genre_ids, release_date }) => {\n      return `<div class=\"films-card\">\n                    <img\n                        class=\"projects-list__img\"\n                        src='https://image.tmdb.org/t/p/w500/${poster_path}'\n                        alt='${title}'\n                    />\n                    <div class=\"film-item-wrapper\">\n                        <p class=\"film-description-title\">${title}</p>\n                        <div class=\"film-description-wrapper\">\n                            <p class=\"film-description-items\">${getGenres(\n                              genre_ids,\n                              allGenres\n                            )}</p>\n                            <p class=\"film-description-items\">${getDate(\n                              release_date\n                            )}</p>\n                        </div>\n                    </div>\n                </div>`;\n    })\n    .join('');\n}\n\nfunction getGenres(genresMovie, allGenres) {\n  console.log(allGenres);\n  const filterGenres = allGenres.filter(genre =>\n    genresMovie.includes(genre.id)\n  );\n  const genresName = filterGenres.map(genre => {\n    return genre.name;\n  });\n  if (genresName.length > 2) {\n    return `${genresName.slice(0, 2).join(', ')}, Other`;\n  }\n  console.log(genresName);\n\n  return genresName.join(', ');\n}\n\nfunction getDate(date) {\n  const year = date.split('-')[0];\n  return year;\n}\n\nasync function getAllGenres() {\n  const genresResponse = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=579a7483bae7d6a5a25eb4c1ddded2cf'\n  );\n  const genresParse = await genresResponse.json();\n  const allGenres = genresParse.genres;\n  console.log(allGenres);\n  return allGenres;\n}\n"],"names":["$07b41b3798316248$var$gallery","document","querySelector","async","movies","fetch","resp","json","console","log","results","$07b41b3798316248$var$getMovie","genresResponse","allGenres","genres","$07b41b3798316248$var$getAllGenres","$07b41b3798316248$var$render","then","innerHTML","map","poster_path","title","genre_ids","release_date","genresMovie","genresName","filter","genre","includes","id","name","length","slice","join","$07b41b3798316248$var$getGenres","date","split","$07b41b3798316248$var$galleryMarkup"],"version":3,"file":"index.80a55896.js.map"}